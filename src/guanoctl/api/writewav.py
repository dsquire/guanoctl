""" Implement the writewav command.

"""
import csv
import sys

# from datetime import datetime
from uuid import uuid4
from shutil import copy
from pathlib import Path
from collections import OrderedDict
from guano import GuanoFile
from ..core.logger import logger
# from ..core.config import config


def main(wav_dir, input_file) -> str:
    """ Execute the command.

    :param wav_dir: the directory where wav files are stored
    :param input_file: the full path of the csv input file generated by 'readwav'
    """
    logger.debug("executing writewav command")
    ABCD = OrderedDict()

    try:
        backup_dir = Path(wav_dir[0]).joinpath('guanoctl_out')
    except FileNotFoundError:
        logger.error('The backup directory does not exist!')
        sys.exit()

    try:
        backup_dir.mkdir()
    except FileExistsError:
        logger.error('The working directory already exists.')
        sys.exit()

    for file in Path(wav_dir[0]).glob('*.[Ww][Aa][Vv]'):
        copy(file.as_posix(), backup_dir.as_posix())

    with open(input_file, 'r', newline='') as metadata_file:
        reader = csv.DictReader(metadata_file)

        for row in reader:
            # TODO: Insert a try here
            gf = GuanoFile(backup_dir.joinpath(row['Original Filename']).as_posix())
            gf.register('ABCD', 'uuid', coerce_abcd)
            gf['ABCD|uuid'] = str(uuid4())
            gf['ABCD|test'] = 'blah'
            gf['ABCD|test2'] = 'blah2'

            for key, value in row.items():
                gf[key] = value

            try:
                gf.write()
            except ValueError:
                logger.error('Column: ' + key + ' Value: ' + value + ' is wrong data type!')
            except AttributeError:
                logger.error('Column: ' + key + ' Value: ' + value + ' is wrong data type!')

    return "Hello"  # TODO: use f-string for Python 3.6+


def coerce_abcd(value):
    try:
        str(value)
    except ValueError:
        logger.error(value + ' is not a string')

    return value
